name: Propius Backend Deploy

on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - production

# ssh -i ~/.ssh/propius_deploy_key root@212.56.42.99

jobs:
  propius-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PROPIUS_SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 212.56.42.99 >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy Backend to CONTABO SERVER
        run: |
          echo "Deploying backend to CONTABO SERVER"
          ssh -o StrictHostKeyChecking=no root@212.56.42.99 << 'EOF'
            set -e

            echo "[STEP 1] Criando/entrando no diretório do projeto"
            PROJECT_DIR="/root"

            if [ ! -d "$PROJECT_DIR" ]; then
              echo "  > Diretório não existe, criando e clonando o repo"
              mkdir -p "$PROJECT_DIR"
              cd "$PROJECT_DIR"

              echo "  > Clonando repositório"
              git clone https://github.com/davifati/administramosImoveis.git . || exit 1
              git checkout production || exit 1
            else
              echo "  > Diretório já existe"
              cd "$PROJECT_DIR"
            fi
            echo "[✓] Diretório pronto"

            echo "Listing files in current directory:"
            ls -la

            echo "[STEP 2] Atualizando código"
            if [ ! -d ".git" ]; then
              echo "  > Repositório git não existe, clonando"
              rm -rf * .[!.]* ..?*  # Remove all files including hidden ones
              git clone https://github.com/davifati/administramosImoveis.git . || exit 1
              git checkout production || exit 1
            else
              echo "  > Repositório já existe, atualizando"
              git fetch origin production || exit 1
              git reset --hard origin/production || exit 1
            fi
            echo "[✓] Código atualizado"

            echo "Listing files in current directory:"
            ls -la

            echo "[STEP 3] Entrando no diretório do projeto - propius/backend"
            cd propius/backend

            echo "Listing files in current directory:"
            ls -la

            echo "[STEP 4] Instalando e configurando pyenv"
            if ! command -v pyenv &> /dev/null; then
              echo "  > Instalando pyenv"
              curl https://pyenv.run | bash || exit 1
              echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
              echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
              echo 'eval "$(pyenv init -)"' >> ~/.bashrc
              source ~/.bashrc
            fi

            echo "  > Instalando Python 3.12 via pyenv"
            pyenv install 3.12.0 || exit 1
            pyenv global 3.12.0 || exit 1

            echo "[STEP 5] Ativando/criando ambiente virtual"
            if [ ! -d "venv" ]; then
              echo "  > venv não encontrado, criando"
              python -m venv venv || exit 1
            fi
            source venv/bin/activate || exit 1
            echo "[✓] Ambiente virtual pronto com Python 3.12"

            echo "[STEP 5] Instalando dependências"
            pip install -r requirements.txt || exit 1
            echo "[✓] Dependências instaladas"

            echo "[STEP 6] Rodando migrações"
            python manage.py migrate || exit 1
            echo "[✓] Migrações aplicadas"

            # echo "[STEP 7] Coletando arquivos estáticos"
            # python manage.py collectstatic --noinput || exit 1
            # echo "[✓] Arquivos estáticos coletados"

            echo "[STEP 8] Reiniciando serviços (comentado por enquanto)"
            # sudo systemctl restart gunicorn || sudo supervisorctl restart myapp || exit 1
            # sudo systemctl restart nginx || exit 1
            # echo "[✓] Serviços reiniciados"

            echo "[✓] Deploy finalizado com sucesso"
            exit 0
          EOF
