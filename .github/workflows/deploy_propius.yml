name: Propius Backend Deploy

on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - production

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PROPIUS_SSH_PRIVATE_KEY }}

      - name: Deploy Backend to CONTABO SERVER
        run: |
          echo "Deploying backend to CONTABO SERVER"
          ssh -o StrictHostKeyChecking=no root@212.56.42.99 << 'EOF'
            set -e

            echo "[STEP 1] Criando/entrando no diretório do projeto"
            PROJECT_DIR="/root/propius"

            if [ ! -d "$PROJECT_DIR" ]; then
              echo "  > Diretório não existe, criando e clonando o repo"
              mkdir -p "$PROJECT_DIR"
              cd "$PROJECT_DIR"

              echo "  > Clonando repositório"
              git clone https://github.com/davifati/administramosImoveis.git . || exit 1
              git checkout production || exit 1
            else
              echo "  > Diretório já existe"
              cd "$PROJECT_DIR"
            fi
            echo "[✓] Diretório pronto"



            echo "[STEP 2] Atualizando código"
            git fetch origin production || exit 1
            git checkout production || exit 1
            git pull origin production || exit 1
            echo "[✓] Código atualizado"
            
            echo "Listing files in current directory:"
            ls -la


            echo "[STEP 2] Verificando se é um repositório Git"
            if [ ! -d ".git" ]; then
              echo "Erro: o diretório não é um repositório Git."
              exit 1
            fi
            echo "[✓] Diretório é um repositório Git"


            echo "[STEP 4] Ativando/criando ambiente virtual"
            if [ ! -d "venv" ]; then
              echo "  > venv não encontrado, criando"
              python3 -m venv venv
            fi
            source venv/bin/activate || exit 1
            echo "[✓] Ambiente virtual pronto"

            echo "[STEP 5] Instalando dependências"
            pip install -r requirements.txt || exit 1
            echo "[✓] Dependências instaladas"

            echo "[STEP 6] Rodando migrações"
            python manage.py migrate || exit 1
            echo "[✓] Migrações aplicadas"

            # echo "[STEP 7] Coletando arquivos estáticos"
            # python manage.py collectstatic --noinput || exit 1
            # echo "[✓] Arquivos estáticos coletados"

            echo "[STEP 8] Reiniciando serviços (comentado por enquanto)"
            # sudo systemctl restart gunicorn || sudo supervisorctl restart myapp || exit 1
            # sudo systemctl restart nginx || exit 1
            # echo "[✓] Serviços reiniciados"

            echo "[✓] Deploy finalizado com sucesso"
            exit 0
          EOF
