# Generated by Django 5.1.6 on 2025-03-23 21:12

import django.db.models.deletion
import django_countries.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('imoveis', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Proprietario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('deletado_em', models.DateTimeField(blank=True, null=True, verbose_name='Deletado em')),
                ('nome', models.CharField(max_length=150, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=25, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(max_length=25, unique=True, verbose_name='RG')),
                ('telefone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, unique=True, verbose_name='E-mail')),
                ('endereco', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado')),
                ('pais', django_countries.fields.CountryField(blank=True, default='BR', max_length=2, null=True, verbose_name='País')),
            ],
            options={
                'verbose_name': 'Proprietário',
                'verbose_name_plural': 'Proprietários',
                'ordering': ['nome'],
            },
        ),
        migrations.AlterModelOptions(
            name='unidade',
            options={'ordering': ['condominio', 'unidade'], 'verbose_name': 'Unidade', 'verbose_name_plural': 'Unidades'},
        ),
        migrations.RenameField(
            model_name='administradora',
            old_name='updated_at',
            new_name='atualizado_em',
        ),
        migrations.RenameField(
            model_name='administradora',
            old_name='created_at',
            new_name='criado_em',
        ),
        migrations.RenameField(
            model_name='administradora',
            old_name='qtd_imoveis',
            new_name='quantidade_imoveis',
        ),
        migrations.RenameField(
            model_name='condominio',
            old_name='updated_at',
            new_name='atualizado_em',
        ),
        migrations.RenameField(
            model_name='condominio',
            old_name='created_at',
            new_name='criado_em',
        ),
        migrations.RenameField(
            model_name='unidade',
            old_name='updated_at',
            new_name='atualizado_em',
        ),
        migrations.RenameField(
            model_name='unidade',
            old_name='created_at',
            new_name='criado_em',
        ),
        migrations.RemoveField(
            model_name='unidade',
            name='cpf_proprietario',
        ),
        migrations.RemoveField(
            model_name='unidade',
            name='nome_proprietario',
        ),
        migrations.RemoveField(
            model_name='unidade',
            name='numero_pasta',
        ),
        migrations.RemoveField(
            model_name='unidade',
            name='numero_unidade',
        ),
        migrations.AddField(
            model_name='administradora',
            name='deletado_em',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Deletado em'),
        ),
        migrations.AddField(
            model_name='condominio',
            name='deletado_em',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Deletado em'),
        ),
        migrations.AddField(
            model_name='unidade',
            name='deletado_em',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Deletado em'),
        ),
        migrations.AddField(
            model_name='unidade',
            name='pasta',
            field=models.IntegerField(default=0, unique=True, verbose_name='Número da Pasta'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='unidade',
            name='unidade',
            field=models.IntegerField(default=0, verbose_name='Número da Unidade'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='condominio',
            name='administradora',
            field=models.ForeignKey(help_text='Refere-se à administradora responsável por esse condomínio.', on_delete=django.db.models.deletion.CASCADE, related_name='condominios', to='imoveis.administradora', verbose_name='Administradora da qual o condomínio faz parte'),
        ),
        migrations.AlterField(
            model_name='condominio',
            name='nome',
            field=models.CharField(max_length=200, verbose_name='Nome do Condomínio'),
        ),
        migrations.AlterField(
            model_name='condominio',
            name='numero',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Número do Imóvel'),
        ),
        migrations.AlterField(
            model_name='unidade',
            name='condominio',
            field=models.ForeignKey(help_text='unidade pertence a um condomínio específico.', on_delete=django.db.models.deletion.CASCADE, related_name='unidades', to='imoveis.condominio', verbose_name='Condomínio em que a unidade está localizada'),
        ),
        migrations.CreateModel(
            name='Inquilino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('deletado_em', models.DateTimeField(blank=True, null=True, verbose_name='Deletado em')),
                ('nome', models.CharField(max_length=150, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=25, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(max_length=25, unique=True, verbose_name='RG')),
                ('telefone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, unique=True, verbose_name='E-mail')),
                ('endereco', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado')),
                ('pais', django_countries.fields.CountryField(blank=True, default='BR', max_length=2, null=True, verbose_name='País')),
                ('unidade', models.ForeignKey(help_text='Refere-se à unidade da qual o inquilino é responsável por alugar.', on_delete=django.db.models.deletion.CASCADE, related_name='inquilinos', to='imoveis.unidade', verbose_name='Unidade Alugada')),
            ],
            options={
                'verbose_name': 'Inquilino',
                'verbose_name_plural': 'Inquilinos',
                'ordering': ['nome'],
            },
        ),
        migrations.AddField(
            model_name='unidade',
            name='proprietario',
            field=models.OneToOneField(default=0, help_text='Este é o proprietário da unidade, cada unidade tem um único proprietário.', on_delete=django.db.models.deletion.CASCADE, related_name='unidade', to='imoveis.proprietario', verbose_name='Proprietário da unidade'),
            preserve_default=False,
        ),
    ]
